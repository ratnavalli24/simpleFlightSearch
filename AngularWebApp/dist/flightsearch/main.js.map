{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n\\n\\n\\n  <div class=\\\" alert-info text-center\\\">\\n\\n\\n    <br />\\n    <br />\\n\\n    <h1>\\n      Simple Flight Search\\n    </h1>\\n\\n    <br />\\n    <br />\\n\\n\\n  </div>\\n  <br />\\n\\n  <div style=\\\"width: 80%; margin: auto; padding-bottom: 50px;\\\">\\n\\n\\n    <br />\\n    <br />\\n\\n\\n\\n\\n\\n\\n\\n    <form [formGroup]=\\\"angularForm\\\" novalidate>\\n      <div class=\\\"form-group text-center\\\">\\n        <label>Flight Number: <input class=\\\"form-control\\\" formControlName=\\\"flightNumber\\\" type=\\\"text\\\"></label>\\n\\n        <label>Origin Port: <input class=\\\"form-control\\\" formControlName=\\\"origin\\\" type=\\\"text\\\"></label>\\n        <label>Destination Port: <input class=\\\"form-control\\\" formControlName=\\\"destination\\\" type=\\\"text\\\"></label>\\n\\n        <label>Arrival/Departure Date* : <input class=\\\"form-control\\\" formControlName=\\\"fdate\\\" type=\\\"date\\\"></label>\\n\\n\\n\\n\\n\\n      </div>\\n      <br />\\n\\n      <button (click)=\\\"get_flights()\\\" [disabled]=\\\"angularForm.pristine || angularForm.invalid\\\" class=\\\"btn btn-success\\\">\\n        Search\\n      </button>\\n\\n\\n      <br />\\n      <br />\\n\\n      <div class=\\\"alert alert-warning\\\"> {{message}} </div>\\n\\n\\n      <br />\\n      <br />\\n\\n\\n    </form>\\n    <br />\\n\\n\\n\\n    <div *ngIf=\\\"flights?.length > 0\\\">\\n\\n      <table class=\\\"table table-striped\\\">\\n        <thead>\\n          <tr>\\n            <th>\\n              Flight Number\\n            </th>\\n            <th>\\n              Carrier\\n            </th>\\n            <th>Origin </th>\\n            <th>Departure time</th>\\n            <th>Destination </th>\\n            <th>Arrival time</th>\\n            <th>Status </th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let flight of flights  \\\">\\n\\n            <td>\\n              {{flight.flightNumber}}\\n            </td>\\n            <td>\\n              {{flight.carrier}}\\n            </td>\\n            <td> {{flight.origin}} </td>\\n            <td> {{flight.departure}} </td>\\n            <td> {{flight.destination}} </td>\\n            <td> {{flight.arrival}} </td>\\n            <td> {{flight.status}} </td>\\n\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { FlightDatabaseService } from './data.service';\nimport { Flight } from './flight';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  angularForm: FormGroup;\n  message: string;\n  instruction = 'Please enter Date along with either flight number or both origin & destination codes!';\n  private flights: Object = [];\n\n  constructor(private dataService: FlightDatabaseService, private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angularForm = this.fb.group({\n      flightNumber: ['2005'],\n      origin: ['IAH'],\n      destination: [''],\n      fdate: ['2018-01-31', Validators.required],\n      // fdate: [''],\n\n    }, {\n      });\n\n    this.message = this.instruction;\n  }\n\n\n\n\n\n  get_flights() {\n    // (Flight Number || (Origin && Destination)) && Date\n    if (this.angularForm.value.flightNumber || (this.angularForm.value.origin && this.angularForm.value.destination)) {\n\n      this.searchFlights();\n\n    } else {\n      this.message = 'Invalid input. ' + this.instruction;\n      // return;\n    }\n\n\n  }\n\n\n  searchFlights( ) {\n\n    const flightNumber = this.angularForm.value.flightNumber;\n    const origin = this.angularForm.value.origin.toUpperCase();\n    const destination = this.angularForm.value.destination.toUpperCase();\n    const fdate = this.angularForm.value.fdate;\n\n    // const results: Flight[] = this.dataService.get_flights(flightNumber, origin, destination, fdate)\n    this.dataService.searchFlights(flightNumber, origin, destination, fdate).subscribe(result => {\n         console.log('result is: ' + result);\n         this.flights = result ;\n        // this.message = result.length + ' results found.';\n\n      }\n    );\n\n\n\n\n  }\n\n\n\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlightDatabaseService } from './data.service';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [FlightDatabaseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\nimport { Flight } from './Flight';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FlightDatabaseService {\n  private readonly urlRestAPI: string =     'http://localhost:8080/flights/search';\n\n\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  searchFlights(flightNumber: string, origin: string, destination: string, fdate: string) {\n\n    let headers = new HttpHeaders();\n    headers  = headers.append('Content-Type', 'application/json');\n\n    let params = new HttpParams();\n    params = params.append('flightNumber', flightNumber);\n    params = params.append('origin', origin);\n    params = params.append('destination', destination);\n    params = params.append('date', fdate);\n\n\n    // params?: HttpParams | {\n    //             [param: string]: string | string[];\n    //         };flightNumber=2005&origin=IAH&date=2018-01-31\n    // const options = new RequestOptions({ headers: , params: searchParams });\n    return this.http.get  (this.urlRestAPI, { headers , params } ) ;\n\n\n  }\n\n\n  getUsers() {\n    return this.http.get('https://reqres.in/api/users');\n  }\n\n\n\n\n\n\n// Error handling\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n// Get client-side error\n      errorMessage = error.error.message;\n    } else {\n// Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}